{"version":3,"sources":["components/users/UserCreate.js","components/users/index.js","components/MapResult.js","App.js","serviceWorker.js","index.js"],"names":["incomeChoices","id","name","budgetChoices","educationChoices","CustomToolbar","props","react_default","a","createElement","Toolbar","SaveButton","label","redirect","users","create","Create","Object","assign","title","SimpleForm","toolbar","UserCreate_CustomToolbar","TextInput","source","NumberInput","SelectInput","choices","withStyles","card","maxWidth","media","objectFit","container","display","justifyContent","marginTop","classes","className","AppBar_default","Toolbar_default","Typography_default","variant","color","Card_default","CardMedia_default","component","alt","height","image","CardContent_default","gutterBottom","CardActions_default","Button_default","size","onClick","window","location","href","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","dataProvider","buildGraphcoolProvider","clientOptions","uri","setState","Admin","customRoutes","es","exact","path","MapResult","noLayout","Resource","list","ListGuesser","React","Component","Boolean","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6afc7790.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  Create,\n  SimpleForm,\n  TextInput,\n  NumberInput,\n  SelectInput,\n  SaveButton,\n  Toolbar\n} from 'react-admin'\n\nconst incomeChoices = [\n  {id: 'Low Income', name: '0-$45,000'},\n  {id: 'Medium Income', name: '$45,000-$90,000'},\n  {id: 'High Income', name: '$90,000+'}\n]\n\nconst budgetChoices = [\n  {id: '$300,000-$500,000', name: '$300,000-$500,000'},\n  {id: '$500,000-$700,000', name: '$500,000-$700,000'},\n  {id: '$700,000-$900,000', name: '$700,000-$900,000'},\n  {id: '$900,000+', name: '$900,000+'}\n]\n\nconst educationChoices = [\n  {id: 'Primary School', name: 'Primary School'},\n  {id: 'High School', name: 'High School'},\n  {id: 'University', name: 'University'}\n\n]\n\nconst CustomToolbar = props => (\n  <Toolbar {...props} >\n    <SaveButton label=\"Find Suitable House\" redirect=\"/map\" />\n  </Toolbar>\n)\n\nexport default props => (\n<Create {...props} title=\"Find Place to Stay\" >\n    <SimpleForm toolbar={<CustomToolbar />}>\n  <h1>Find a Home </h1>\n\n        <TextInput source=\"name\" />\n        <NumberInput source=\"age\" />\n        <SelectInput source=\"income\" choices={incomeChoices} />\n        <SelectInput source=\"budget\" choices={budgetChoices} />\n        <SelectInput source=\"education\" choices={educationChoices} />\n        <TextInput source=\"work\" />\n        <NumberInput source=\"familysize\" />\n        <TextInput source=\"school\" /> \n    </SimpleForm>\n  </Create>\n)","import UserCreate from \"./UserCreate\";\n\nexport default {\n  create: UserCreate\n};\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nconst styles = {\n  card: {\n    maxWidth: 345,\n  },\n  media: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover',\n  },\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: '100px',\n  }\n};\nconst MyCard =  (props) => {\n  const { classes } = props;\n  \n  return (\n  <div  className={classes.container}>\n  <AppBar >\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Mapper\n          </Typography>\n        </Toolbar>\n      </AppBar>\n  <Card className={classes.card}>\n        <CardMedia\n          component=\"img\"\n          alt=\"Contemplative Reptile\"\n          className={classes.media}\n          height=\"300\"\n          image=\"/armadale.png\"\n          title=\"Armadale\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Your most suitable location is Armadale\n          </Typography>\n          <Typography component=\"p\">\n            Using advanced AI we have determined this to be the best place for you.\n          </Typography>\n        </CardContent>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" onClick={() => window.location.href=\"/#/user/create\"}>\n          Back to Search Page\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  </div>\n)}\n\nexport default withStyles(styles)(MyCard)","import React from 'react'\nimport { Admin, Resource, ListGuesser } from 'react-admin'\nimport buildGraphcoolProvider from 'ra-data-graphcool'\nimport users from './components/users'\nimport posts from './components/posts'\nimport { Route } from 'react-router-dom';\n// import Form from './components/form';\nimport PersonCreate from './components/persons/create'\nimport MapResult from './components/MapResult'\n\nfunction Form () {\n  return (\n    <h1>hello</h1>\n  )\n}\n\nexport default class App extends React.Component {\n  constructor() {\n    super()\n    this.state = { dataProvider: null }\n  }\n\n  async componentDidMount() {\n    const dataProvider = await buildGraphcoolProvider({\n      clientOptions: {\n        uri: 'https://api.graph.cool/simple/v1/cjta4329e6hot0182ceqf6y92'\n      }\n    })\n\n    this.setState({ dataProvider })\n  }\n\n  render() {\n    const { dataProvider } = this.state\n\n    if (!dataProvider) {\n      return <div>Loading</div>\n    }\n\n    return (\n      <Admin dataProvider={dataProvider}  customRoutes={[\n        <Route\n            exact\n            path=\"/map\"\n            component={MapResult}\n            noLayout\n            />]}\n        >\n        {/* <Resource name=\"Post\" list={PostList} edit={PostEdit} create={PostCreate} remove={Delete} /> */}\n        <Resource name=\"User\" list={ListGuesser} {...users} />\n        {/* <Resource name=\"Post\" list={ListGuesser} {...posts} /> */}\n        {/* <Resource name=\"Person\" list={ListGuesser} create={PersonCreate} noLayout/> */}\n      </Admin>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}